name: Deploy Next.js (frontend) to GitHub Pages

on:
  push:
    branches: ["main"]
    paths:
      - "frontend/**"
      - ".github/workflows/nextjs-pages.yml"
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect package manager (in frontend)
        id: pm
        run: |
          if [ -f "yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "install_cmd=install --frozen-lockfile" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
          elif [ -f "package-lock.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "install_cmd=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
          else
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "install_cmd=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.pm.outputs.manager }}
          cache-dependency-path: |
            frontend/package-lock.json
            frontend/yarn.lock

      - name: Setup Pages helper
        uses: actions/configure-pages@v5
        with:
          # Lets GitHub inject basePath/assetPrefix + unoptimized images automatically
          static_site_generator: next

      - name: Restore Next.js cache
        uses: actions/cache@v4
        with:
          path: frontend/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('frontend/**/package-lock.json', 'frontend/**/yarn.lock') }}-${{ hashFiles('frontend/**/*.[jt]s', 'frontend/**/*.[jt]sx', 'frontend/**/*.json') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('frontend/**/package-lock.json', 'frontend/**/yarn.lock') }}-

      - name: Install dependencies
        run: ${{ steps.pm.outputs.manager }} ${{ steps.pm.outputs.install_cmd }}

      - name: Build
        run: ${{ steps.pm.outputs.runner }} next build

      - name: Export static site
        run: ${{ steps.pm.outputs.runner }} next export

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: frontend/out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4
